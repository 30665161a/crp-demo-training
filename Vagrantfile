# Vagrantfile generated by Sandbox Creator.
#
# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # device (router): router
  config.vm.define "router" do |device|
    device.vm.hostname = "router"
    device.vm.box = "generic/debian10"
    device.vm.provider "virtualbox" do |provider|
      provider.memory = 256
      provider.cpus = 1
    end
    device.vm.network :private_network, ip: "192.168.20.1", netmask: "24", virtualbox__intnet: "server-switch"
    device.vm.network :private_network, ip: "192.168.30.1", netmask: "24", virtualbox__intnet: "client-switch"
  end

  # device (host): server
  config.vm.define "server" do |device|
    device.vm.hostname = "server"
    device.vm.box = "ubuntu/xenial64"
    device.vm.provider "virtualbox" do |provider|
      provider.cpus = 2
      provider.memory = 4096
    end
    device.vm.network :private_network, ip: "192.168.20.5", netmask: "24", virtualbox__intnet: "server-switch"
  end

  # device (host): client
  config.vm.define "client" do |device|
    device.vm.hostname = "client"
    device.vm.box = "ubuntu/xenial64"
    device.vm.boot_timeout = 1000
    device.vm.box_check_update = false
    device.vm.network :private_network, ip: "192.168.30.5", netmask: "24", virtualbox__intnet: "client-switch"
  end

  # basic configuration of devices and networks
  config.vm.provision :ansible do |provisioner|
    provisioner.playbook = "base_provisioning/device_configuration.yml"
    provisioner.groups = {
      "hosts" => ['server', 'client'],
      "routers" => ['router']
    }
  end

  # user configuration of devices
  config.vm.provision :ansible do |provisioner|
    provisioner.playbook = "provisioning/playbook.yml"
    provisioner.verbose = true
    # pass arguments in ANSIBLE_ARGS to ansible-playbook
    provisioner.raw_arguments = Shellwords.shellsplit(ENV['ANSIBLE_ARGS']) if ENV['ANSIBLE_ARGS']
    provisioner.groups = {
      "hosts" => ['server', 'client'],
      "routers" => ['router']
    }
  end

end
